#!/bin/bash
nm="Web3Updater"
vs="v1"

if [ "$1" = "" ]; then
   if [ -f /usr/lib/web3updater/update.json ]; then
      web3updaterversion="""
        \e[1;42m $nm \e[0m\e[100m version $vs - Patch: $(jq -r '.patch_at' /usr/lib/web3updater/update.json) \e[0m
        \e[100m Created in 02-05-2021 by Daniell Mesquita \e[0m
"""
      echo "$web3updaterversion"
      echo "Type 'web3updater --help' (without quotes) to see a list of available commands."
      if [ "$1" = "--help" ] || [ "$1" = "-h" ]; then
            echo "        \e[1;42m $nm $vs \e[0m"
            echo "Use these commands after/together with 'web3updater' command."
            echo "Available commands:"
            echo "Information:"
            echo "   --help, -h                  Shows all available commands"
            echo "   --version, -v               Shows the version of $nm"
fi

      if [ "$1" = "--version" ] || [ "$1" = "-v" ]; then
            echo "$web3updaterversion"
fi
fi
fi

echo ""
echo "Welcome to $nm!"
echo "Made in a day where my mom couln't sleep because of an Hare Krishna that lives with my uncle, and the whole day she yelled at us and I became confused. Half day building this piece of art+utility, half day reasoning poorly and thinking to burn all my crypto because money != peace in some cases. But I won't burn my tokens because there are my mom, my uncle and my sister counting on me, and I hope I can change the life of more people, if I even can change the life of my mom and myself/; which is being hard. My brain bugged now to think more so I'll try to focus back on outbursting by building this heresy that no one of these machist transphobe beared professional programmers have thought of. I know Im writing like in 2019 and this is an backstep, but my brain really bugged today, my rare peace of mind from a whole month has been partly broken today. My mom is bipolar, and about Hare I don't want to judge while irritated."
echo "Made in Itajai, Santa Catarina; but IMPORTANT: this is not an Brazilian funk music remix."

if [ ! -f /usr/lib/web3updater/update.json ]; then
    echo ""
    echo "It looks like its your first time using $nm..."
    echo ""
echo "The web3 (that came from Ethereum and IPFS) is replacing the web 2.0, and $nm will put it also on OS/app updates!"
echo ""
echo "Never more depend on centralized servers to get updates."
echo ""
echo "As $nm can be used in any product to manage updates (such as Electron apps), it uses itself to update itself (meta-language)."
echo ""
echo "Initializing..."
    cat > /usr/lib/web3updater/update.json <<EOF
{
"patch_at": 0
}
EOF
mkdir /usr/lib/web3updater/tmp-remote && git remote add web3updater /usr/lib/web3updater/tmp-remote
echo "Done!"
fi

echo ""
echo "Version: $vs / Patch: $(jq -r '.patch_at' /usr/lib/web3updater/update.json)"

echo ""
echo "Checking for new updates..."

if [ $(jq -r '.patch_at' /usr/lib/web3updater/update.json) -ge "4" ]; then
    recentlycheckedat=$(date +"%s")
    contents="$(jq ".recently_checked_at = \"$recentlycheckedat\"" /usr/lib/web3updater/update.json)" && \
    echo "${contents}" > /usr/lib/web3updater/update.json
fi

if [ "$(jq -r '.new_patch_at' /usr/lib/web3updater/new_patch_at.json)" -gt "$(jq -r '.patch_at' /usr/lib/web3updater/update.json)" ]; then
    echo "Updating $nm..."
    sh ./update.sh
    if [ $(jq -r '.patch_at' /usr/lib/web3updater/update.json) -ge "5" ]; then
        #- check if cid is different before continuing, thats what "Checking for updates" should work for
        contents="$(jq -r '.ens' /usr/lib/web3updater/update.json)"
        echo "Contents is # $contents #"
        ipfs pin add $(ethereal ens contenthash get --domain=${contents})
        ipfs ls $(ethereal ens contenthash get --domain=${contents})
        ipfs get --output=/usr/lib/web3updater/tmp-remote $(ethereal ens contenthash get --domain=${contents})
        git pull web3updater master && git remote remove web3updater && rm -rf /usr/lib/web3updater/tmp-remote
fi
    sh ./update.sh # run this only if new cid is different. the previous (sh ./update.sh) is only for first time install, and this is after checking for new updates and diffing ok
    recentlyupdatedat=$(date +"%s")
    contents="$(jq ".recently_updated_at = \"$recentlyupdatedat\"" /usr/lib/web3updater/update.json)" && \
    echo "${contents}" > /usr/lib/web3updater/update.json
    if [ $(jq -r '.patch_at' /usr/lib/web3updater/update.json) -ge 3 ]; then
        contents1="$(jq -r '.ens' /usr/lib/web3updater/update.json)"
        cidat=$(ethereal ens contenthash get --domain=${contents1})
        contents="$(jq ".cid_at = \"$cidat\"" /usr/lib/web3updater/update.json)" && \
        echo "${contents}" > /usr/lib/web3updater/update.json
fi
else
    echo "UP-TO-DATE like a breeze! No new updates to install, yet."
    contents=$(jq -r '.recently_checked_at' /usr/lib/web3updater/update.json)
    echo "Recently checked at: $(date -d @${contents})"
    contents=$(jq -r '.recently_updated_at' /usr/lib/web3updater/update.json)
    echo "Recently updated at: $(date -d @${contents})"
fi

#- Web3Updater > UniStore (web3updater get support to binaries, not using git; and for CommonBytes i/o + CommonChain for seeding .deb files and their content; CLI apps with their own ASCII icons) > Plugz (mini embed installer to run directly from CLI apps) > Web3Updater
#- install Plugz (includes IPFS, jq) and ethereal using Plugz, that depends on UniStore, that depends on Web3Updater

#- command to init on a project (only CLI, for now - adds the full web3updater lib installable globally + its custom new_patch_at.json, update.sh, update.json, etc) - "web3updater init"
#- guide to add/write new updates (both on update.sh and new_patch_at.json)
#- suggest adding CLI app into UniStore instead of web3updater init (Plugz on UniStore will add web3updater as dependency, as IPFS is a dependency of web3updater)
#- "web3updater check/update"
#- command to finalize adding an update: makes an bare git repo tmp folder (git init --bare build && git remote add build build), push/uploads into it, adds this folder into IPFS, copies its CID and shows it to user until ethereal uses an Floflis keychain to automatically sign/update ENS

#- factory reset
#- issue: "ge"/"gt" https://www.google.com/search?q=bash+jq+-ge%3A+unexpected+operator&client=firefox-b-d&sxsrf=ALeKk02M1HdgqOD_uVa8r1cbaFzibUu1qA%3A1620507855770&ei=z_yWYMOhLo_e1sQPnZ6L6Ac&oq=bash+jq+-ge%3A+unexpected+operator&gs_lcp=Cgdnd3Mtd2l6EAM6BwgAEEcQsANQ9_EJWJOICmDoiwpoAXACeACAAbkBiAHsCpIBAzAuOZgBAKABAaoBB2d3cy13aXrIAQjAAQE&sclient=gws-wiz&ved=0ahUKEwiDxeSY_rrwAhUPr5UCHR3PAn0Q4dUDCAw&uact=5 because of using jq to write and at same time to read (collision)
#- separated branches/update types: patch (such as installing a program), risky patch, cumulative (normal, thats how Web3Updater updates itself
#- EPNS notifications
#- if IPFS is not running, run it
#- incentive to use an local ethereum node (also from .ppl), instead of infura
